ARM Linker, 4.1 [Build 713] [Standard]

==============================================================================

Section Cross References

    startup.o(RESET) refers to startup.o(STACK) for Stack_Top
    startup.o(RESET) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    main.o(.text) refers to malloc.o(i.malloc) for malloc
    main.o(.text) refers to malloc.o(i.free) for free
    main.o(.text) refers to lcd.o(.text) for delay
    main.o(.text) refers to memcpya.o(.text) for __aeabi_memcpy4
    main.o(.text) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    main.o(.text) refers to dflti.o(.text) for __aeabi_i2d
    main.o(.text) refers to dadd.o(.text) for __aeabi_drsub
    main.o(.text) refers to dmul.o(.text) for __aeabi_dmul
    main.o(.text) refers to ddiv.o(.text) for __aeabi_ddiv
    main.o(.text) refers to main.o(.bss) for .bss
    main.o(.text) refers to main.o(.data) for .data
    main.o(.text) refers to tanh.o(i.tanh) for tanh
    main.o(.text) refers to ks0108.o(.text) for GLCD_Initalize
    main.o(.text) refers to idiv.o(.text) for __aeabi_idivmod
    main.o(.text) refers to main.o(.constdata) for .constdata
    main.o(.text) refers to step1.o(.text) for emxCreateWrapper_uint8_T
    main.o(.text) refers to step2.o(.text) for step2
    main.o(.text) refers to step3.o(.text) for step3
    main.o(.text) refers to dfltui.o(.text) for __aeabi_ui2d
    main.o(.text) refers to lcd.o(.text) for delay
    main.o(.text) refers to uidiv.o(.text) for __aeabi_uidivmod
    main.o(.text) refers to idiv.o(.text) for __aeabi_idivmod
    main.o(.text) refers to main.o(.text) for trans
    main.o(.text) refers to main.o(.data) for .data
    main.o(.text) refers to main.o(.bss) for .bss
    main.o(.text) refers to uidiv.o(.text) for __aeabi_uidivmod
    main.o(.text) refers to main.o(.text) for trans
    main.o(.text) refers to main.o(.bss) for .bss
    step1.o(.text) refers to malloc.o(i.malloc) for malloc
    step1.o(.text) refers to calloc.o(.text) for calloc
    step1.o(.text) refers to memcpya.o(.text) for __aeabi_memcpy
    step1.o(.text) refers to malloc.o(i.free) for free
    step1.o(.text) refers to dfltui.o(.text) for __aeabi_ui2d
    step1.o(.text) refers to ddiv.o(.text) for __aeabi_ddiv
    step1.o(.text) refers to dmul.o(.text) for __aeabi_dmul
    step1.o(.text) refers to cdcmple.o(.text) for __aeabi_cdcmple
    step1.o(.text) refers to dadd.o(.text) for __aeabi_dsub
    step1.o(.text) refers to ceil.o(i.ceil) for ceil
    step1.o(.text) refers to floor.o(i.floor) for floor
    step1.o(.text) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    step1.o(.text) refers to dfixui.o(.text) for __aeabi_d2uiz
    step1.o(.text) refers to step1.o(.text) for c_emxInit_uint8_T
    step1.o(.text) refers to calloc.o(.text) for calloc
    step1.o(.text) refers to step1.o(.text) for c_emxInit_uint8_T
    step1.o(.text) refers to step1.o(.text) for c_emxInit_uint8_T
    step1.o(.text) refers to calloc.o(.text) for calloc
    step2.o(.text) refers to memseta.o(.text) for __aeabi_memclr
    step3.o(.text) refers to dfltui.o(.text) for __aeabi_ui2d
    step3.o(.text) refers to dadd.o(.text) for __aeabi_dadd
    step3.o(.text) refers to cdcmple.o(.text) for __aeabi_cdcmple
    step3.o(.text) refers to ceil.o(i.ceil) for ceil
    step3.o(.text) refers to floor.o(i.floor) for floor
    step3.o(.text) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    step3.o(.text) refers to dfixui.o(.text) for __aeabi_d2uiz
    graphic.o(.text) refers to ks0108.o(.text) for GLCD_SetPixel
    graphic.o(.text) refers to ks0108.o(.text) for GLCD_SetPixel
    graphic.o(.text) refers to ks0108.o(.text) for GLCD_SetPixel
    lcd.o(.text) refers to lcd.o(.text) for delay
    lcd.o(.text) refers to lcd.o(.text) for delay
    lcd.o(.text) refers to lcd.o(.text) for wait_lcd
    lcd.o(.text) refers to lcd.o(.text) for lcd_command_write
    lcd.o(.text) refers to lcd.o(.text) for lcd_command_write
    lcd.o(.text) refers to lcd.o(.text) for wait_lcd
    lcd.o(.text) refers to lcd.o(.text) for lcd_data_write
    lcd.o(.text) refers to lcd.o(.text) for lcd_gotoxy
    lcd.o(.text) refers to lcd.o(.text) for lcd_data_write
    lcd.o(.text) refers to lcd.o(.text) for set_lcd_port_output
    lcd.o(.text) refers to lcd.o(.text) for delay
    lcd.o(.text) refers to lcd.o(.text) for lcd_command_write
    lcd.o(.text) refers to lcd.o(.text) for lcd_command_write
    lcd.o(.text) refers to idiv.o(.text) for __aeabi_idivmod
    lcd.o(.text) refers to lcd.o(.text) for lcd_data_write
    ks0108.o(.text) refers to ks0108-lpc.o(.text) for GLCD_InitalizePorts
    ks0108.o(.text) refers to ks0108.o(.data) for .data
    ks0108.o(.text) refers to ks0108.o(.constdata) for .constdata
    ks0108.o(.text) refers to ks0108.o(.text) for GLCD_GoTo
    ks0108.o(.text) refers to ks0108-lpc.o(.text) for GLCD_ReadByteFromROMMemory
    ks0108-lpc.o(.text) refers to ks0108.o(.data) for screen_x
    ceil.o(i.__softfp_ceil) refers (Special) to iusefp.o(.text) for __I$use$fp
    ceil.o(i.__softfp_ceil) refers to ceil.o(i.ceil) for ceil
    ceil.o(i.ceil) refers (Special) to iusefp.o(.text) for __I$use$fp
    ceil.o(i.ceil) refers to dadd.o(.text) for __aeabi_dadd
    ceil.o(i.ceil) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    floor.o(i.__softfp_floor) refers (Special) to iusefp.o(.text) for __I$use$fp
    floor.o(i.__softfp_floor) refers to floor.o(i.floor) for floor
    floor.o(i.floor) refers (Special) to iusefp.o(.text) for __I$use$fp
    floor.o(i.floor) refers to dadd.o(.text) for __aeabi_dadd
    floor.o(i.floor) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    tanh.o(i.__softfp_tanh) refers (Special) to iusefp.o(.text) for __I$use$fp
    tanh.o(i.__softfp_tanh) refers to tanh.o(i.tanh) for tanh
    tanh.o(i.tanh) refers (Special) to iusefp.o(.text) for __I$use$fp
    tanh.o(i.tanh) refers to dscalb.o(.text) for __ARM_scalbn
    tanh.o(i.tanh) refers to fpclassify.o(i.__ARM_fpclassify) for __ARM_fpclassify
    tanh.o(i.tanh) refers to dunder.o(i.__mathlib_dbl_underflow) for __mathlib_dbl_underflow
    tanh.o(i.tanh) refers to expm1_i.o(i.__mathlib_expm1) for __mathlib_expm1
    tanh.o(i.tanh) refers to dadd.o(.text) for __aeabi_dadd
    tanh.o(i.tanh) refers to ddiv.o(.text) for __aeabi_ddiv
    tanh.o(i.tanh) refers to dmul.o(.text) for __aeabi_dmul
    tanh_x.o(i.____softfp_tanh$lsc) refers (Special) to iusefp.o(.text) for __I$use$fp
    tanh_x.o(i.____softfp_tanh$lsc) refers to tanh_x.o(i.__tanh$lsc) for __tanh$lsc
    tanh_x.o(i.__tanh$lsc) refers (Special) to iusefp.o(.text) for __I$use$fp
    tanh_x.o(i.__tanh$lsc) refers to dscalb.o(.text) for __ARM_scalbn
    tanh_x.o(i.__tanh$lsc) refers to expm1_i.o(i.__mathlib_expm1) for __mathlib_expm1
    tanh_x.o(i.__tanh$lsc) refers to dadd.o(.text) for __aeabi_dadd
    tanh_x.o(i.__tanh$lsc) refers to ddiv.o(.text) for __aeabi_ddiv
    tanh_x.o(i.__tanh$lsc) refers to dmul.o(.text) for __aeabi_dmul
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7.o(.ARM.Collect$$$$00000007) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    idiv.o(.text) refers to uidiv.o(.text) for __aeabi_uidivmod
    malloc.o(i.free) refers to mvars.o(.data) for __microlib_freelist
    malloc.o(i.malloc) refers to mvars.o(.data) for __microlib_freelist_initialised
    malloc.o(i.malloc) refers to mvars.o(.data) for __microlib_freelist
    malloc.o(i.malloc) refers to startup.o(HEAP) for __heap_base
    mallocr.o(i.__free$realloc) refers to mvars.o(.data) for __microlib_freelist
    mallocr.o(i.__malloc$realloc) refers to mallocr.o(i.internal_alloc) for internal_alloc
    mallocr.o(i.__malloc$realloc) refers to startup.o(HEAP) for __heap_base
    mallocr.o(i.__malloc$realloc) refers to mvars.o(.data) for __microlib_freelist
    mallocr.o(i.__malloc$realloc) refers to mvars.o(.data) for __microlib_freelist_initialised
    mallocr.o(i.internal_alloc) refers to memcpya.o(.text) for __aeabi_memcpy
    mallocr.o(i.internal_alloc) refers to mvars.o(.data) for __microlib_freelist
    mallocr.o(i.realloc) refers to mallocr.o(i.__free$realloc) for __free$realloc
    mallocr.o(i.realloc) refers to mallocr.o(i.internal_alloc) for internal_alloc
    mallocr.o(i.realloc) refers to mallocr.o(i.__malloc$realloc) for __malloc$realloc
    mallocr.o(i.realloc) refers to mvars.o(.data) for __microlib_freelist
    malloca.o(i.__aligned_malloc) refers to mvars.o(.data) for __microlib_freelist
    malloca.o(i.__aligned_malloc) refers to mvars.o(.data) for __microlib_freelist_initialised
    malloca.o(i.__aligned_malloc) refers to startup.o(HEAP) for __heap_base
    malloca.o(i.__free$memalign) refers to mvars.o(.data) for __microlib_freelist
    malloca.o(i.__malloc$memalign) refers to malloca.o(i.__aligned_malloc) for __aligned_malloc
    mallocra.o(i.__aligned_malloc$realloc) refers to mallocra.o(i.internal_alloc) for internal_alloc
    mallocra.o(i.__aligned_malloc$realloc) refers to mvars.o(.data) for __microlib_freelist_initialised
    mallocra.o(i.__aligned_malloc$realloc) refers to startup.o(HEAP) for __heap_base
    mallocra.o(i.__aligned_malloc$realloc) refers to mvars.o(.data) for __microlib_freelist
    mallocra.o(i.__free$realloc$memalign) refers to mvars.o(.data) for __microlib_freelist
    mallocra.o(i.__malloc$realloc$memalign) refers to mallocra.o(i.__aligned_malloc$realloc) for __aligned_malloc$realloc
    mallocra.o(i.__realloc$memalign) refers to mallocra.o(i.__free$realloc$memalign) for __free$realloc$memalign
    mallocra.o(i.__realloc$memalign) refers to mallocra.o(i.internal_alloc) for internal_alloc
    mallocra.o(i.__realloc$memalign) refers to mallocra.o(i.__malloc$realloc$memalign) for __malloc$realloc$memalign
    mallocra.o(i.__realloc$memalign) refers to mvars.o(.data) for __microlib_freelist
    mallocra.o(i.internal_alloc) refers to memcpya.o(.text) for __aeabi_memcpy
    mallocra.o(i.internal_alloc) refers to mvars.o(.data) for __microlib_freelist
    calloc.o(.text) refers to malloc.o(i.malloc) for malloc
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dflti.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dflti.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dfltui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfltui.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dfixui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixui.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    cdcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    cdrcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dunder.o(i.__mathlib_dbl_underflow) refers to dscalb.o(.text) for __ARM_scalbn
    expm1_i.o(i.__mathlib_expm1) refers (Special) to iusefp.o(.text) for __I$use$fp
    expm1_i.o(i.__mathlib_expm1) refers to dscalb.o(.text) for __ARM_scalbn
    expm1_i.o(i.__mathlib_expm1) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    expm1_i.o(i.__mathlib_expm1) refers to errno.o(i.__set_errno) for __set_errno
    expm1_i.o(i.__mathlib_expm1) refers to dadd.o(.text) for __aeabi_dadd
    expm1_i.o(i.__mathlib_expm1) refers to cdcmple.o(.text) for __aeabi_cdcmple
    expm1_i.o(i.__mathlib_expm1) refers to dmul.o(.text) for __aeabi_dmul
    expm1_i.o(i.__mathlib_expm1) refers to dfixi.o(.text) for __aeabi_d2iz
    expm1_i.o(i.__mathlib_expm1) refers to dflti.o(.text) for __aeabi_i2d
    expm1_i.o(i.__mathlib_expm1) refers to poly.o(i.__kernel_poly) for __kernel_poly
    expm1_i.o(i.__mathlib_expm1) refers to ddiv.o(.text) for __aeabi_ddiv
    expm1_i.o(i.__mathlib_expm1) refers to fpclassify.o(i.__ARM_fpclassify) for __ARM_fpclassify
    expm1_i.o(i.__mathlib_expm1) refers to dunder.o(i.__mathlib_dbl_underflow) for __mathlib_dbl_underflow
    expm1_i.o(i.__mathlib_expm1) refers to expm1_i.o(.constdata) for .constdata
    expm1_i.o(.constdata) refers (Special) to iusefp.o(.text) for __I$use$fp
    expm1_i_x.o(i.____mathlib_expm1$lsc) refers (Special) to iusefp.o(.text) for __I$use$fp
    expm1_i_x.o(i.____mathlib_expm1$lsc) refers to dscalb.o(.text) for __ARM_scalbn
    expm1_i_x.o(i.____mathlib_expm1$lsc) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    expm1_i_x.o(i.____mathlib_expm1$lsc) refers to errno.o(i.__set_errno) for __set_errno
    expm1_i_x.o(i.____mathlib_expm1$lsc) refers to dadd.o(.text) for __aeabi_dadd
    expm1_i_x.o(i.____mathlib_expm1$lsc) refers to cdcmple.o(.text) for __aeabi_cdcmple
    expm1_i_x.o(i.____mathlib_expm1$lsc) refers to dmul.o(.text) for __aeabi_dmul
    expm1_i_x.o(i.____mathlib_expm1$lsc) refers to dfixi.o(.text) for __aeabi_d2iz
    expm1_i_x.o(i.____mathlib_expm1$lsc) refers to dflti.o(.text) for __aeabi_i2d
    expm1_i_x.o(i.____mathlib_expm1$lsc) refers to poly.o(i.__kernel_poly) for __kernel_poly
    expm1_i_x.o(i.____mathlib_expm1$lsc) refers to ddiv.o(.text) for __aeabi_ddiv
    expm1_i_x.o(i.____mathlib_expm1$lsc) refers to expm1_i_x.o(.constdata) for .constdata
    expm1_i_x.o(.constdata) refers (Special) to iusefp.o(.text) for __I$use$fp
    fpclassify.o(i.__ARM_fpclassify) refers (Special) to iusefp.o(.text) for __I$use$fp
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup.o(STACK) for __initial_sp
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry7.o(.ARM.Collect$$$$00000007) refers to main.o(.text) for main
    depilogue.o(.text) refers to depilogue.o(i.__ARM_clz) for __ARM_clz
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    poly.o(i.__kernel_poly) refers (Special) to iusefp.o(.text) for __I$use$fp
    poly.o(i.__kernel_poly) refers to dmul.o(.text) for __aeabi_dmul
    poly.o(i.__kernel_poly) refers to dadd.o(.text) for __aeabi_dadd
    init.o(.text) refers to init.o(i.__ARM_common_call_via_r3) for __ARM_common_call_via_r3
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    errno.o(i.__aeabi_errno_addr) refers to errno.o(.data) for .data
    errno.o(i.__read_errno) refers to errno.o(.data) for .data
    errno.o(i.__set_errno) refers to errno.o(.data) for .data
    dfixi.o(.text) refers to llushr.o(.text) for __aeabi_llsr


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (32 bytes).
    Removing main.o(.text), (396 bytes).
    Removing main.o(.text), (136 bytes).
    Removing main.o(.data), (8 bytes).
    Removing step1.o(.text), (112 bytes).
    Removing step1.o(.text), (104 bytes).
    Removing step1.o(.text), (108 bytes).
    Removing step1.o(.text), (4 bytes).
    Removing step2.o(.text), (4 bytes).
    Removing step3.o(.text), (4 bytes).
    Removing graphic.o(.text), (164 bytes).
    Removing graphic.o(.text), (284 bytes).
    Removing graphic.o(.text), (224 bytes).
    Removing graphic.o(.constdata), (1 bytes).
    Removing lcd.o(.text), (88 bytes).
    Removing lcd.o(.text), (148 bytes).
    Removing lcd.o(.text), (48 bytes).
    Removing lcd.o(.text), (8 bytes).
    Removing lcd.o(.text), (68 bytes).
    Removing lcd.o(.text), (96 bytes).
    Removing lcd.o(.text), (8 bytes).
    Removing lcd.o(.text), (72 bytes).
    Removing lcd.o(.text), (36 bytes).
    Removing lcd.o(.text), (36 bytes).
    Removing lcd.o(.text), (52 bytes).
    Removing lcd.o(.text), (48 bytes).
    Removing lcd.o(.text), (140 bytes).
    Removing ks0108.o(.text), (112 bytes).
    Removing ks0108-lpc.o(.text), (12 bytes).

29 unused section(s) (total 2553 bytes) removed from the image.

==============================================================================

Adding Veneers to the image

    Adding AT veneer (8 bytes, Inline) for call to '__aeabi_idivmod' from main.o(.text).
    Adding AT veneer (8 bytes, Inline) for call to '__aeabi_memcpy4' from main.o(.text).
    Adding AT veneer (8 bytes, Inline) for call to '__aeabi_memclr' from step2.o(.text).
    Adding AT veneer (8 bytes, Inline) for call to 'calloc' from step1.o(.text).
    Adding AT veneer (8 bytes, Inline) for call to '__aeabi_dadd' from main.o(.text).
    Adding AT veneer (8 bytes, Inline) for call to '__aeabi_dmul' from main.o(.text).
    Adding AT veneer (8 bytes, Inline) for call to '__aeabi_ddiv' from main.o(.text).
    Adding AT veneer (8 bytes, Inline) for call to '__aeabi_i2d' from main.o(.text).
    Adding AT veneer (8 bytes, Inline) for call to '__aeabi_ui2d' from main.o(.text).
    Adding AT veneer (8 bytes, Inline) for call to '__aeabi_d2uiz' from step1.o(.text).
    Adding AT veneer (8 bytes, Inline) for call to '__aeabi_cdcmple' from step1.o(.text).
    Adding AT veneer (8 bytes, Inline) for call to '__aeabi_cdrcmple' from main.o(.text).
    Adding AT veneer (8 bytes, Inline) for call to '__ARM_scalbn' from dunder.o(i.__mathlib_dbl_underflow).
    Adding AT veneer (8 bytes, Inline) for call to '__scatterload' from entry5.o(.ARM.Collect$$$$00000004).
    Adding AT veneer (8 bytes, Inline) for call to '__aeabi_d2iz' from expm1_i.o(i.__mathlib_expm1).
    Adding AT veneer (12 bytes, Long) for call to '__aeabi_drsub' from main.o(.text).
    Adding AT veneer (12 bytes, Long) for call to '__aeabi_memcpy' from step1.o(.text).
    Adding AT veneer (12 bytes, Long) for call to '__aeabi_dsub' from step1.o(.text).
    Adding TA veneer (8 bytes, Short) for call to '__main_after_scatterload' from init.o(.text).
    Adding AT veneer (8 bytes, Inline) for call to '__set_errno' from expm1_i.o(i.__mathlib_expm1).
    Adding AT veneer (8 bytes, Inline) for call to 'free' from main.o(.text).
    Adding AT veneer (8 bytes, Inline) for call to 'malloc' from main.o(.text).

22 Veneer(s) (total 188 bytes) added to the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      280  startup.o(RESET)
    ../../ceil.c                             0x00000000   Number         0  ceil.o ABSOLUTE
    ../../dunder.c                           0x00000000   Number         0  dunder.o ABSOLUTE
    ../../expm1_i.c                          0x00000000   Number         0  expm1_i_x.o ABSOLUTE
    ../../expm1_i.c                          0x00000000   Number         0  expm1_i.o ABSOLUTE
    ../../floor.c                            0x00000000   Number         0  floor.o ABSOLUTE
    ../../fpclassify.c                       0x00000000   Number         0  fpclassify.o ABSOLUTE
    ../../microlib/division.c                0x00000000   Number         0  uidiv.o ABSOLUTE
    ../../microlib/division.c                0x00000000   Number         0  idiv.o ABSOLUTE
    ../../microlib/errno.c                   0x00000000   Number         0  errno.o ABSOLUTE
    ../../microlib/fpadd.c                   0x00000000   Number         0  dadd.o ABSOLUTE
    ../../microlib/fpdiv.c                   0x00000000   Number         0  ddiv.o ABSOLUTE
    ../../microlib/fpepilogue.c              0x00000000   Number         0  depilogue.o ABSOLUTE
    ../../microlib/fpfix.c                   0x00000000   Number         0  dfixui.o ABSOLUTE
    ../../microlib/fpfix.c                   0x00000000   Number         0  dfixi.o ABSOLUTE
    ../../microlib/fpflt.c                   0x00000000   Number         0  dflti.o ABSOLUTE
    ../../microlib/fpflt.c                   0x00000000   Number         0  dfltui.o ABSOLUTE
    ../../microlib/fpmul.c                   0x00000000   Number         0  dmul.o ABSOLUTE
    ../../microlib/fpscalb.c                 0x00000000   Number         0  dscalb.o ABSOLUTE
    ../../microlib/init/entry.s              0x00000000   Number         0  entry7.o ABSOLUTE
    ../../microlib/init/entry.s              0x00000000   Number         0  entry.o ABSOLUTE
    ../../microlib/init/entry.s              0x00000000   Number         0  entry5.o ABSOLUTE
    ../../microlib/init/entry.s              0x00000000   Number         0  entry2.o ABSOLUTE
    ../../microlib/longlong.c                0x00000000   Number         0  llsshr.o ABSOLUTE
    ../../microlib/longlong.c                0x00000000   Number         0  llushr.o ABSOLUTE
    ../../microlib/longlong.c                0x00000000   Number         0  llshl.o ABSOLUTE
    ../../microlib/malloc/calloc.c           0x00000000   Number         0  calloc.o ABSOLUTE
    ../../microlib/malloc/malloc.c           0x00000000   Number         0  mallocr.o ABSOLUTE
    ../../microlib/malloc/malloc.c           0x00000000   Number         0  malloc.o ABSOLUTE
    ../../microlib/malloc/malloc.c           0x00000000   Number         0  mallocra.o ABSOLUTE
    ../../microlib/malloc/malloc.c           0x00000000   Number         0  malloca.o ABSOLUTE
    ../../microlib/malloc/mvars.c            0x00000000   Number         0  mvars.o ABSOLUTE
    ../../microlib/string/memcpy.c           0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../../microlib/string/memcpy.c           0x00000000   Number         0  memcpya.o ABSOLUTE
    ../../microlib/string/memset.c           0x00000000   Number         0  memseta.o ABSOLUTE
    ../../microlib/stubs.s                   0x00000000   Number         0  iusefp.o ABSOLUTE
    ../../poly.c                             0x00000000   Number         0  poly.o ABSOLUTE
    ../../tanh.c                             0x00000000   Number         0  tanh_x.o ABSOLUTE
    ../../tanh.c                             0x00000000   Number         0  tanh.o ABSOLUTE
    KS0108-LPC.c                             0x00000000   Number         0  ks0108-lpc.o ABSOLUTE
    KS0108.c                                 0x00000000   Number         0  ks0108.o ABSOLUTE
    Startup.s                                0x00000000   Number         0  startup.o ABSOLUTE
    cdcmple.s                                0x00000000   Number         0  cdcmple.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    graphic.c                                0x00000000   Number         0  graphic.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    lcd.c                                    0x00000000   Number         0  lcd.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    step1.c                                  0x00000000   Number         0  step1.o ABSOLUTE
    step2.c                                  0x00000000   Number         0  step2.o ABSOLUTE
    step3.c                                  0x00000000   Number         0  step3.o ABSOLUTE
    Undef_Handler                            0x00000040   ARM Code       4  startup.o(RESET)
    SWI_Handler                              0x00000044   ARM Code       4  startup.o(RESET)
    PAbt_Handler                             0x00000048   ARM Code       4  startup.o(RESET)
    DAbt_Handler                             0x0000004c   ARM Code       4  startup.o(RESET)
    IRQ_Handler                              0x00000050   ARM Code       4  startup.o(RESET)
    FIQ_Handler                              0x00000054   ARM Code       4  startup.o(RESET)
    .ARM.Collect$$$$00000000                 0x00000118   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x00000118   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x0000011c   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000007                 0x00000120   Section       12  entry7.o(.ARM.Collect$$$$00000007)
    .ARM.Collect$$$$00002712                 0x0000012c   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    __lit__00000000                          0x0000012c   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x00000130   Section        0  main.o(.text)
    emxInit_uint8_T                          0x00000130   ARM Code     100  main.o(.text)
    emxFree_uint8_T                          0x00000194   ARM Code      72  main.o(.text)
    .text                                    0x00000e48   Section        0  step1.o(.text)
    b_emxInit_int32_T                        0x00000e48   ARM Code     100  step1.o(.text)
    c_emxInit_uint8_T                        0x00000eac   ARM Code     100  step1.o(.text)
    emxEnsureCapacity                        0x00000f10   ARM Code     172  step1.o(.text)
    eml_li_find                              0x00000fbc   ARM Code     164  step1.o(.text)
    eml_sort_le                              0x00001060   ARM Code     184  step1.o(.text)
    emxFree_boolean_T                        0x00001118   ARM Code      72  step1.o(.text)
    emxFree_int32_T                          0x00001160   ARM Code      72  step1.o(.text)
    emxFree_uint8_T                          0x000011a8   ARM Code      72  step1.o(.text)
    emxInit_boolean_T                        0x000011f0   ARM Code     100  step1.o(.text)
    emxInit_uint8_T                          0x00001254   ARM Code     100  step1.o(.text)
    unique                                   0x000012b8   ARM Code    1764  step1.o(.text)
    .text                                    0x00002558   Section        0  step2.o(.text)
    .text                                    0x00002618   Section        0  step3.o(.text)
    b_sum                                    0x00002618   ARM Code     132  step3.o(.text)
    sum                                      0x0000269c   ARM Code     132  step3.o(.text)
    .text                                    0x000032a4   Section        0  lcd.o(.text)
    .text                                    0x000032c8   Section        0  ks0108.o(.text)
    .text                                    0x00003478   Section        0  ks0108-lpc.o(.text)
    .text                                    0x000036f4   Section        0  uidiv.o(.text)
    .text                                    0x0000372c   Section        0  idiv.o(.text)
    .text                                    0x00003760   Section        0  memcpya.o(.text)
    .text                                    0x0000378c   Section        0  memseta.o(.text)
    .text                                    0x000037c0   Section        0  calloc.o(.text)
    .text                                    0x000037e8   Section        0  dadd.o(.text)
    .text                                    0x00003958   Section        0  dmul.o(.text)
    .text                                    0x00003a30   Section        0  ddiv.o(.text)
    .text                                    0x00003b2c   Section        0  dflti.o(.text)
    .text                                    0x00003b5c   Section        0  dfltui.o(.text)
    .text                                    0x00003b84   Section        0  dfixui.o(.text)
    .text                                    0x00003bc8   Section       40  cdcmple.o(.text)
    .text                                    0x00003bf8   Section       40  cdrcmple.o(.text)
    .text                                    0x00003c20   Section        0  llshl.o(.text)
    .text                                    0x00003c42   Section        0  llushr.o(.text)
    .text                                    0x00003c66   Section        0  llsshr.o(.text)
    .text                                    0x00003c90   Section        0  depilogue.o(.text)
    .text                                    0x00003c90   Section        0  iusefp.o(.text)
    .text                                    0x00003d64   Section        0  dscalb.o(.text)
    .text                                    0x00003d9c   Section       32  init.o(.text)
    .text                                    0x00003dc4   Section        0  dfixi.o(.text)
    i.__ARM_clz                              0x00003e38   Section        0  depilogue.o(i.__ARM_clz)
    i.__ARM_common_call_via_r3               0x00003e66   Section        2  init.o(i.__ARM_common_call_via_r3)
    i.__ARM_fpclassify                       0x00003e68   Section        0  fpclassify.o(i.__ARM_fpclassify)
    i.__kernel_poly                          0x00003e98   Section        0  poly.o(i.__kernel_poly)
    i.__mathlib_dbl_underflow                0x00003f98   Section        0  dunder.o(i.__mathlib_dbl_underflow)
    i.__mathlib_expm1                        0x00003fac   Section        0  expm1_i.o(i.__mathlib_expm1)
    i.__scatterload_copy                     0x00004524   Section       28  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00004540   Section        4  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00004544   Section       24  handlers.o(i.__scatterload_zeroinit)
    i.__set_errno                            0x00004564   Section        0  errno.o(i.__set_errno)
    i.ceil                                   0x00004570   Section        0  ceil.o(i.ceil)
    i.floor                                  0x000046c0   Section        0  floor.o(i.floor)
    i.free                                   0x0000481c   Section        0  malloc.o(i.free)
    i.malloc                                 0x0000487c   Section        0  malloc.o(i.malloc)
    i.tanh                                   0x000048ec   Section        0  tanh.o(i.tanh)
    .constdata                               0x00004a38   Section     7984  main.o(.constdata)
    .constdata                               0x00006968   Section      480  ks0108.o(.constdata)
    font5x8                                  0x00006968   Data         480  ks0108.o(.constdata)
    .constdata                               0x00006b48   Section       40  expm1_i.o(.constdata)
    Q                                        0x00006b48   Data          40  expm1_i.o(.constdata)
    .data                                    0x40000000   Section       16  main.o(.data)
    .data                                    0x40000010   Section        2  ks0108.o(.data)
    .data                                    0x40000014   Section        4  mvars.o(.data)
    .data                                    0x40000018   Section        4  mvars.o(.data)
    .data                                    0x4000001c   Section        4  errno.o(.data)
    _errno                                   0x4000001c   Data           4  errno.o(.data)
    .bss                                     0x40000020   Section     5200  main.o(.bss)
    HEAP                                     0x40001470   Section        0  startup.o(HEAP)
    STACK                                    0x40001470   Section    26760  startup.o(STACK)
    Stack_Top                                0x40007cf8   Data           0  startup.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv1$ARM_ISAv4$S$PE$A:L22$X:L11$S22$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$IEEEX$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __decompress                              - Undefined Weak Reference
    Reset_Handler                            0x00000058   ARM Code       0  startup.o(RESET)
    __main                                   0x00000118   ARM Code       0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x00000118   ARM Code       0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x0000011c   ARM Code       0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x00000120   ARM Code       0  entry5.o(.ARM.Collect$$$$00000004)
    _main_init                               0x00000120   ARM Code       0  entry7.o(.ARM.Collect$$$$00000007)
    InitADC                                  0x000001dc   ARM Code      60  main.o(.text)
    Read_xaxis                               0x00000218   ARM Code     192  main.o(.text)
    Read_yaxis                               0x000002d8   ARM Code     192  main.o(.text)
    Init_UART                                0x00000398   ARM Code      68  main.o(.text)
    character                                0x000003dc   ARM Code     100  main.o(.text)
    remove_noise                             0x00000440   ARM Code     272  main.o(.text)
    mapminmax                                0x00000550   ARM Code     196  main.o(.text)
    char_recog_nn                            0x00000614   ARM Code     592  main.o(.text)
    capture                                  0x00000864   ARM Code      60  main.o(.text)
    delay_ms                                 0x000008a0   ARM Code      28  main.o(.text)
    main                                     0x000008bc   ARM Code    1392  main.o(.text)
    emxCreateWrapper_uint8_T                 0x0000199c   ARM Code     104  step1.o(.text)
    emxDestroyArray_uint8_T                  0x00001a04   ARM Code      20  step1.o(.text)
    step1                                    0x00001a18   ARM Code    2868  step1.o(.text)
    step2                                    0x00002558   ARM Code     192  step2.o(.text)
    step3                                    0x00002720   ARM Code    2940  step3.o(.text)
    delay                                    0x000032a4   ARM Code      36  lcd.o(.text)
    GLCD_Initalize                           0x000032c8   ARM Code      48  ks0108.o(.text)
    GLCD_GoTo                                0x000032f8   ARM Code     116  ks0108.o(.text)
    GLCD_ClearScreen                         0x0000336c   ARM Code      72  ks0108.o(.text)
    GLCD_WriteChar                           0x000033b4   ARM Code      64  ks0108.o(.text)
    GLCD_WriteString                         0x000033f4   ARM Code      40  ks0108.o(.text)
    GLCD_SetPixel                            0x0000341c   ARM Code      84  ks0108.o(.text)
    GLCD_EnableController                    0x00003478   ARM Code      36  ks0108-lpc.o(.text)
    GLCD_DisableController                   0x0000349c   ARM Code      36  ks0108-lpc.o(.text)
    GLCD_ReadStatus                          0x000034c0   ARM Code     104  ks0108-lpc.o(.text)
    GLCD_WriteCommand                        0x00003528   ARM Code     116  ks0108-lpc.o(.text)
    GLCD_ReadData                            0x0000359c   ARM Code     144  ks0108-lpc.o(.text)
    GLCD_WriteData                           0x0000362c   ARM Code     152  ks0108-lpc.o(.text)
    GLCD_InitalizePorts                      0x000036c4   ARM Code      32  ks0108-lpc.o(.text)
    GLCD_ReadByteFromROMMemory               0x000036e4   ARM Code       8  ks0108-lpc.o(.text)
    __aeabi_uidiv                            0x000036f5   Thumb Code     0  uidiv.o(.text)
    __aeabi_uidivmod                         0x000036f5   Thumb Code    46  uidiv.o(.text)
    Inline ARM to Thumb Veneer to __aeabi_idivmod 0x00003724   ARM Code       8  idiv.o(.text)
    __aeabi_idiv                             0x0000372d   Thumb Code     0  idiv.o(.text)
    __aeabi_idivmod                          0x0000372d   Thumb Code    44  idiv.o(.text)
    Inline ARM to Thumb Veneer to __aeabi_memcpy4 0x00003758   ARM Code       8  memcpya.o(.text)
    __aeabi_memcpy                           0x00003761   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x00003761   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x00003761   Thumb Code     0  memcpya.o(.text)
    Inline ARM to Thumb Veneer to __aeabi_memclr 0x00003784   ARM Code       8  memseta.o(.text)
    __aeabi_memset                           0x0000378d   Thumb Code    16  memseta.o(.text)
    __aeabi_memset4                          0x0000378d   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x0000378d   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x0000379d   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x0000379d   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x0000379d   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x000037a1   Thumb Code    24  memseta.o(.text)
    Inline ARM to Thumb Veneer to calloc     0x000037b8   ARM Code       8  calloc.o(.text)
    calloc                                   0x000037c1   Thumb Code    32  calloc.o(.text)
    Inline ARM to Thumb Veneer to __aeabi_dadd 0x000037e0   ARM Code       8  dadd.o(.text)
    __aeabi_dadd                             0x000037e9   Thumb Code   330  dadd.o(.text)
    __aeabi_dsub                             0x00003933   Thumb Code    12  dadd.o(.text)
    __aeabi_drsub                            0x0000393f   Thumb Code    12  dadd.o(.text)
    Inline ARM to Thumb Veneer to __aeabi_dmul 0x00003950   ARM Code       8  dmul.o(.text)
    __aeabi_dmul                             0x00003959   Thumb Code   202  dmul.o(.text)
    Inline ARM to Thumb Veneer to __aeabi_ddiv 0x00003a28   ARM Code       8  ddiv.o(.text)
    __aeabi_ddiv                             0x00003a31   Thumb Code   238  ddiv.o(.text)
    Inline ARM to Thumb Veneer to __aeabi_i2d 0x00003b24   ARM Code       8  dflti.o(.text)
    __aeabi_i2d                              0x00003b2d   Thumb Code    36  dflti.o(.text)
    Inline ARM to Thumb Veneer to __aeabi_ui2d 0x00003b54   ARM Code       8  dfltui.o(.text)
    __aeabi_ui2d                             0x00003b5d   Thumb Code    26  dfltui.o(.text)
    Inline ARM to Thumb Veneer to __aeabi_d2uiz 0x00003b7c   ARM Code       8  dfixui.o(.text)
    __aeabi_d2uiz                            0x00003b85   Thumb Code    54  dfixui.o(.text)
    Inline ARM to Thumb Veneer to __aeabi_cdcmple 0x00003bc0   ARM Code       8  cdcmple.o(.text)
    __aeabi_cdcmpeq                          0x00003bc9   Thumb Code     0  cdcmple.o(.text)
    __aeabi_cdcmple                          0x00003bc9   Thumb Code    40  cdcmple.o(.text)
    Inline ARM to Thumb Veneer to __aeabi_cdrcmple 0x00003bf0   ARM Code       8  cdrcmple.o(.text)
    __aeabi_cdrcmple                         0x00003bf9   Thumb Code    40  cdrcmple.o(.text)
    __aeabi_llsl                             0x00003c21   Thumb Code    34  llshl.o(.text)
    _ll_shift_l                              0x00003c21   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x00003c43   Thumb Code    36  llushr.o(.text)
    _ll_ushift_r                             0x00003c43   Thumb Code     0  llushr.o(.text)
    __aeabi_lasr                             0x00003c67   Thumb Code    40  llsshr.o(.text)
    _ll_sshift_r                             0x00003c67   Thumb Code     0  llsshr.o(.text)
    __I$use$fp                               0x00003c90   ARM Code       0  iusefp.o(.text)
    _double_round                            0x00003c91   Thumb Code    28  depilogue.o(.text)
    _double_epilogue                         0x00003cad   Thumb Code   176  depilogue.o(.text)
    Inline ARM to Thumb Veneer to __ARM_scalbn 0x00003d5c   ARM Code       8  dscalb.o(.text)
    __ARM_scalbn                             0x00003d65   Thumb Code    46  dscalb.o(.text)
    scalbn                                   0x00003d65   Thumb Code     0  dscalb.o(.text)
    Inline ARM to Thumb Veneer to __scatterload 0x00003d94   ARM Code       8  init.o(.text)
    __scatterload                            0x00003d9d   Thumb Code    24  init.o(.text)
    __scatterload_rt2                        0x00003d9d   Thumb Code     0  init.o(.text)
    Inline ARM to Thumb Veneer to __aeabi_d2iz 0x00003dbc   ARM Code       8  dfixi.o(.text)
    __aeabi_d2iz                             0x00003dc5   Thumb Code    66  dfixi.o(.text)
    Long ARM to Thumb Veneer to __aeabi_drsub 0x00003e0c   ARM Code      12  anon$$obj.o(Veneer$$Code)
    Long ARM to Thumb Veneer to __aeabi_memcpy 0x00003e18   ARM Code      12  anon$$obj.o(Veneer$$Code)
    Long ARM to Thumb Veneer to __aeabi_dsub 0x00003e24   ARM Code      12  anon$$obj.o(Veneer$$Code)
    Short Thumb to ARM Veneer to __main_after_scatterload 0x00003e31   Thumb Code     8  anon$$obj.o(Veneer$$Code)
    __ARM_clz                                0x00003e39   Thumb Code    46  depilogue.o(i.__ARM_clz)
    __ARM_common_call_via_r3                 0x00003e67   Thumb Code     2  init.o(i.__ARM_common_call_via_r3)
    __ARM_fpclassify                         0x00003e68   ARM Code      48  fpclassify.o(i.__ARM_fpclassify)
    __kernel_poly                            0x00003e98   ARM Code     256  poly.o(i.__kernel_poly)
    __mathlib_dbl_underflow                  0x00003f98   ARM Code      20  dunder.o(i.__mathlib_dbl_underflow)
    __mathlib_expm1                          0x00003fac   ARM Code    1344  expm1_i.o(i.__mathlib_expm1)
    __scatterload_copy                       0x00004524   ARM Code      28  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00004540   ARM Code       4  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00004544   ARM Code      24  handlers.o(i.__scatterload_zeroinit)
    Inline ARM to Thumb Veneer to __set_errno 0x0000455c   ARM Code       8  errno.o(i.__set_errno)
    __set_errno                              0x00004565   Thumb Code     6  errno.o(i.__set_errno)
    ceil                                     0x00004570   ARM Code     328  ceil.o(i.ceil)
    floor                                    0x000046c0   ARM Code     332  floor.o(i.floor)
    Inline ARM to Thumb Veneer to free       0x00004814   ARM Code       8  malloc.o(i.free)
    free                                     0x0000481d   Thumb Code    82  malloc.o(i.free)
    Inline ARM to Thumb Veneer to malloc     0x00004874   ARM Code       8  malloc.o(i.malloc)
    malloc                                   0x0000487d   Thumb Code    94  malloc.o(i.malloc)
    tanh                                     0x000048ec   ARM Code     332  tanh.o(i.tanh)
    Region$$Table$$Base                      0x00006b70   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00006b90   Number         0  anon$$obj.o(Region$$Table)
    xaxis1                                   0x40000000   Data           2  main.o(.data)
    yaxis1                                   0x40000002   Data           2  main.o(.data)
    x1                                       0x40000004   Data           2  main.o(.data)
    x2                                       0x40000006   Data           2  main.o(.data)
    y1                                       0x40000008   Data           2  main.o(.data)
    y2                                       0x4000000a   Data           2  main.o(.data)
    xyelem                                   0x4000000c   Data           4  main.o(.data)
    screen_x                                 0x40000010   Data           1  ks0108.o(.data)
    screen_y                                 0x40000011   Data           1  ks0108.o(.data)
    __microlib_freelist                      0x40000014   Data           4  mvars.o(.data)
    __microlib_freelist_initialised          0x40000018   Data           4  mvars.o(.data)
    Y                                        0x40000020   Data         208  main.o(.bss)
    char_bin                                 0x400000f0   Data         900  main.o(.bss)
    char_vec                                 0x40000474   Data          10  main.o(.bss)
    char_vec1                                0x40000480   Data          80  main.o(.bss)
    xdata                                    0x400004d0   Data        2000  main.o(.bss)
    ydata                                    0x40000ca0   Data        2000  main.o(.bss)
    __heap_base                              0x40001470   Data           0  startup.o(HEAP)
    __heap_limit                             0x40001470   Data           0  startup.o(HEAP)
    __initial_sp                             0x40007c70   Data         136  startup.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000118

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00006bb0, Max: 0x00080000, ABSOLUTE)

    Execution Region ER_IROM1 (Base: 0x00000000, Size: 0x00006b90, Max: 0x00080000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000118   Code   RO            3    RESET               startup.o
    0x00000118   0x00000000   Code   RO          351  * .ARM.Collect$$$$00000000  mc_t.l(entry.o)
    0x00000118   0x00000004   Code   RO          420    .ARM.Collect$$$$00000001  mc_t.l(entry2.o)
    0x0000011c   0x00000004   Code   RO          422    .ARM.Collect$$$$00000004  mc_t.l(entry5.o)
    0x00000120   0x0000000c   Code   RO          423    .ARM.Collect$$$$00000007  mc_t.l(entry7.o)
    0x0000012c   0x00000004   Code   RO          421    .ARM.Collect$$$$00002712  mc_t.l(entry2.o)
    0x00000130   0x00000d18   Code   RO            8    .text               main.o
    0x00000e48   0x00001710   Code   RO           93    .text               step1.o
    0x00002558   0x000000c0   Code   RO          139    .text               step2.o
    0x00002618   0x00000c8c   Code   RO          160    .text               step3.o
    0x000032a4   0x00000024   Code   RO          203    .text               lcd.o
    0x000032c8   0x000001b0   Code   RO          290    .text               ks0108.o
    0x00003478   0x0000027c   Code   RO          315    .text               ks0108-lpc.o
    0x000036f4   0x0000002e   Code   RO          354    .text               mc_t.l(uidiv.o)
    0x00003722   0x00000002   PAD
    0x00003724   0x00000008   Ven    RO          356    .text               mc_t.l(idiv.o)
    0x0000372c   0x0000002c   Code   RO          356    .text               mc_t.l(idiv.o)
    0x00003758   0x00000008   Ven    RO          358    .text               mc_t.l(memcpya.o)
    0x00003760   0x00000024   Code   RO          358    .text               mc_t.l(memcpya.o)
    0x00003784   0x00000008   Ven    RO          360    .text               mc_t.l(memseta.o)
    0x0000378c   0x0000002c   Code   RO          360    .text               mc_t.l(memseta.o)
    0x000037b8   0x00000008   Ven    RO          392    .text               mc_t.l(calloc.o)
    0x000037c0   0x00000020   Code   RO          392    .text               mc_t.l(calloc.o)
    0x000037e0   0x00000008   Ven    RO          394    .text               mf_t.l(dadd.o)
    0x000037e8   0x00000168   Code   RO          394    .text               mf_t.l(dadd.o)
    0x00003950   0x00000008   Ven    RO          396    .text               mf_t.l(dmul.o)
    0x00003958   0x000000d0   Code   RO          396    .text               mf_t.l(dmul.o)
    0x00003a28   0x00000008   Ven    RO          398    .text               mf_t.l(ddiv.o)
    0x00003a30   0x000000f4   Code   RO          398    .text               mf_t.l(ddiv.o)
    0x00003b24   0x00000008   Ven    RO          400    .text               mf_t.l(dflti.o)
    0x00003b2c   0x00000028   Code   RO          400    .text               mf_t.l(dflti.o)
    0x00003b54   0x00000008   Ven    RO          402    .text               mf_t.l(dfltui.o)
    0x00003b5c   0x00000020   Code   RO          402    .text               mf_t.l(dfltui.o)
    0x00003b7c   0x00000008   Ven    RO          404    .text               mf_t.l(dfixui.o)
    0x00003b84   0x0000003c   Code   RO          404    .text               mf_t.l(dfixui.o)
    0x00003bc0   0x00000008   Ven    RO          406    .text               mf_t.l(cdcmple.o)
    0x00003bc8   0x00000028   Code   RO          406    .text               mf_t.l(cdcmple.o)
    0x00003bf0   0x00000008   Ven    RO          408    .text               mf_t.l(cdrcmple.o)
    0x00003bf8   0x00000028   Code   RO          408    .text               mf_t.l(cdrcmple.o)
    0x00003c20   0x00000022   Code   RO          424    .text               mc_t.l(llshl.o)
    0x00003c42   0x00000024   Code   RO          426    .text               mc_t.l(llushr.o)
    0x00003c66   0x00000028   Code   RO          428    .text               mc_t.l(llsshr.o)
    0x00003c8e   0x00000002   PAD
    0x00003c90   0x00000000   Code   RO          432    .text               mc_t.l(iusefp.o)
    0x00003c90   0x000000cc   Code   RO          433    .text               mf_t.l(depilogue.o)
    0x00003d5c   0x00000008   Ven    RO          437    .text               mf_t.l(dscalb.o)
    0x00003d64   0x0000002e   Code   RO          437    .text               mf_t.l(dscalb.o)
    0x00003d92   0x00000002   PAD
    0x00003d94   0x00000008   Ven    RO          441    .text               mc_t.l(init.o)
    0x00003d9c   0x00000020   Code   RO          441    .text               mc_t.l(init.o)
    0x00003dbc   0x00000008   Ven    RO          452    .text               mf_t.l(dfixi.o)
    0x00003dc4   0x00000048   Code   RO          452    .text               mf_t.l(dfixi.o)
    0x00003e0c   0x0000000c   Ven    RO          480    Veneer$$Code        anon$$obj.o
    0x00003e18   0x0000000c   Ven    RO          481    Veneer$$Code        anon$$obj.o
    0x00003e24   0x0000000c   Ven    RO          482    Veneer$$Code        anon$$obj.o
    0x00003e30   0x00000008   Ven    RO          483    Veneer$$Code        anon$$obj.o
    0x00003e38   0x0000002e   Code   RO          435    i.__ARM_clz         mf_t.l(depilogue.o)
    0x00003e66   0x00000002   Code   RO          443    i.__ARM_common_call_via_r3  mc_t.l(init.o)
    0x00003e68   0x00000030   Code   RO          418    i.__ARM_fpclassify  m_ts.l(fpclassify.o)
    0x00003e98   0x00000100   Code   RO          439    i.__kernel_poly     m_ts.l(poly.o)
    0x00003f98   0x00000014   Code   RO          410    i.__mathlib_dbl_underflow  m_ts.l(dunder.o)
    0x00003fac   0x00000578   Code   RO          412    i.__mathlib_expm1   m_ts.l(expm1_i.o)
    0x00004524   0x0000001c   Code   RO          456    i.__scatterload_copy  mc_t.l(handlers.o)
    0x00004540   0x00000004   Code   RO          457    i.__scatterload_null  mc_t.l(handlers.o)
    0x00004544   0x00000018   Code   RO          458    i.__scatterload_zeroinit  mc_t.l(handlers.o)
    0x0000455c   0x00000008   Ven    RO          447    i.__set_errno       mc_t.l(errno.o)
    0x00004564   0x0000000c   Code   RO          447    i.__set_errno       mc_t.l(errno.o)
    0x00004570   0x00000150   Code   RO          336    i.ceil              m_ts.l(ceil.o)
    0x000046c0   0x00000154   Code   RO          340    i.floor             m_ts.l(floor.o)
    0x00004814   0x00000008   Ven    RO          364    i.free              mc_t.l(malloc.o)
    0x0000481c   0x00000058   Code   RO          364    i.free              mc_t.l(malloc.o)
    0x00004874   0x00000008   Ven    RO          365    i.malloc            mc_t.l(malloc.o)
    0x0000487c   0x00000070   Code   RO          365    i.malloc            mc_t.l(malloc.o)
    0x000048ec   0x0000014c   Code   RO          344    i.tanh              m_ts.l(tanh.o)
    0x00004a38   0x00001f30   Data   RO           13    .constdata          main.o
    0x00006968   0x000001e0   Data   RO          292    .constdata          ks0108.o
    0x00006b48   0x00000028   Data   RO          413    .constdata          m_ts.l(expm1_i.o)
    0x00006b70   0x00000020   Data   RO          454    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Base: 0x40000000, Size: 0x00007cf8, Max: 0x00008000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x40000000   0x00000010   Data   RW           15    .data               main.o
    0x40000010   0x00000002   Data   RW          293    .data               ks0108.o
    0x40000012   0x00000002   PAD
    0x40000014   0x00000004   Data   RW          430    .data               mc_t.l(mvars.o)
    0x40000018   0x00000004   Data   RW          431    .data               mc_t.l(mvars.o)
    0x4000001c   0x00000004   Data   RW          448    .data               mc_t.l(errno.o)
    0x40000020   0x00001450   Zero   RW           12    .bss                main.o
    0x40001470   0x00000000   Zero   RW            2    HEAP                startup.o
    0x40001470   0x00006888   Zero   RW            1    STACK               startup.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       636          8          0          0          0       3020   ks0108-lpc.o
       432          8        480          2          0       2696   ks0108.o
        36          0          0          0          0       1559   lcd.o
      3352        208       7984         16       5200      10844   main.o
       280         52          0          0      26760        384   startup.o
      5904         12          0          0          0      11653   step1.o
       192          0          0          0          0       1728   step2.o
      3212          8          0          0          0       4260   step3.o

    ----------------------------------------------------------------------
     14088        308       8496         20      31960      36144   Object Totals
        44         12         32          0          0          0   (incl. Generated)
         0          0          0          2          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       336          8          0          0          0        144   ceil.o
        20          0          0          0          0         68   dunder.o
      1400         56         40          0          0        272   expm1_i.o
       340          8          0          0          0        144   floor.o
        48          0          0          0          0         68   fpclassify.o
       256          0          0          0          0        116   poly.o
       332          0          0          0          0        144   tanh.o
        40          0          0          0          0         80   calloc.o
         0          0          0          0          0          0   entry.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
        12          4          0          0          0          0   entry7.o
        20          6          0          4          0         60   errno.o
        56          0          0          0          0          0   handlers.o
        52          0          0          0          0         84   idiv.o
        42          8          0          0          0        136   init.o
         0          0          0          0          0          0   iusefp.o
        34          0          0          0          0         72   llshl.o
        40          0          0          0          0         72   llsshr.o
        36          0          0          0          0         72   llushr.o
       216         24          0          0          0        156   malloc.o
        44          0          0          0          0         60   memcpya.o
        52          0          0          0          0        112   memseta.o
         0          0          0          8          0          0   mvars.o
        46          0          0          0          0         72   uidiv.o
        48          0          0          0          0         68   cdcmple.o
        48          0          0          0          0         68   cdrcmple.o
       368          6          0          0          0        156   dadd.o
       252          6          0          0          0        100   ddiv.o
       250          0          0          0          0        236   depilogue.o
        80          6          0          0          0         88   dfixi.o
        68          6          0          0          0         80   dfixui.o
        48          4          0          0          0         76   dflti.o
        40          6          0          0          0         76   dfltui.o
       216          6          0          0          0        104   dmul.o
        54          0          0          0          0         80   dscalb.o

    ----------------------------------------------------------------------
      4912        158         40         12          0       3064   Library Totals
         6          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      2732         72         40          0          0        956   m_ts.l
       702         46          0         12          0        976   mc_t.l
      1472         40          0          0          0       1132   mf_t.l

    ----------------------------------------------------------------------
      4912        158         40         12          0       3064   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     19000        466       8536         32      31960      37540   Grand Totals
     19000        466       8536         32      31960      37540   ELF Image Totals
     19000        466       8536         32          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                27536 (  26.89kB)
    Total RW  Size (RW Data + ZI Data)             31992 (  31.24kB)
    Total ROM Size (Code + RO Data + RW Data)      27568 (  26.92kB)

==============================================================================

